@@ -15,10 +15,23 @@
 class Hash;
 class Kmers;
 
+
+constexpr uint32_t kProtMaxValue = 25;
+constexpr uint32_t kProtBitLength = 5;
+
+constexpr uint32_t kDelMask[6] = { 0, 0, 0, 0x7FFF, 0xFFFFF, 0x1FFFFFF };
+
+constexpr char kAminoAcids[20] = {
+    /* A, C, D, E, F, G, H, I, K, L, M, N, P, Q, R, S, T, V, W, Y */
+    0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24
+};
+
+
+
 std::unique_ptr<Kmers> createKmers(uint32_t kmer_length, uint32_t score_threshold,
     std::shared_ptr<ScoreMatrix> score_matrix);
 
-std::vector<uint32_t> createKmerVector(const std::unique_ptr<Chain>& chain,
+std::vector<uint32_t> createKmerVector(const std::shared_ptr<Chain>& chain,
     uint32_t kmer_length);
 
 class Kmers {
@@ -51,7 +64,14 @@
 
     void createSubstitutionsLong(int score_threshold, std::shared_ptr<ScoreMatrix> score_matrix);
 
-    uint32_t kmer_code(const std::string& kmer) const;
+    uint32_t kmer_code(const std::string& kmer) const {
+        uint32_t code = 0;
+        for (const auto& it: kmer) {
+            code <<= kProtBitLength;
+            code |= it;
+        }
+        return code;
+    }
 
     uint32_t kmer_length_;
     std::vector<std::vector<uint32_t>> data_;
