[build-system]
requires = ['scikit-build-core', 'cython ~=3.0', 'pyopal ~=0.7.0', 'scoring-matrices ~=0.3.0']
build-backend = "scikit_build_core.build"

[project]
name = "pyswrd"
version = "0.3.0"
description = "Cython bindings and Python interface to SWORD (Smith Waterman On Reduced Database), a heuristic method for fast database search. "
readme = "README.md"
requires-python = ">=3.7"
license = { file = "COPYING" }
authors = [
  { name = "Martin Larralde", email = "martin.larralde@embl.de" },
]
platform = "any"
keywords = ["bioinformatics", "sequence", "alignment", "opal", "sword"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: C++",
    "Programming Language :: Cython",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Typing :: Typed",
]
dependencies = [
    "pyopal ~=0.7.0",
    "scoring-matrices ~=0.3.0",
]

[project.urls]
"Homepage" = "https://github.com/althonos/pyswrd/"
"Documentation" = "https://pyswrd.readthedocs.io/en/stable/"
"Bug Tracker" = "https://github.com/althonos/pyswrd/issues"
"Changelog" = "https://github.com/althonos/pyswrd/blob/master/CHANGELOG.md"
"Coverage" = "https://codecov.io/gh/althonos/pyswrd/"
"Builds" = "https://github.com/althonos/pyswrd/actions"
"PyPI" = "https://pypi.org/project/pyswrd"

[project.optional-dependencies]
test = ["importlib-resources ; python_version < '3.9'"]

[tool.scikit-build]
build-dir = "build/{build_type}"
editable.rebuild = true
editable.verbose = false
sdist.exclude = ["src/pyswrd/tests/data/uniprot_sprot12071.fasta", "vendor/sword/vendor/opal/test_data/db/uniprot_sprot12071.fasta"]

[[tool.scikit-build.overrides]]
if.state = "editable"
cmake.build-type = "Debug"

[[tool.scikit-build-overrides]]
if.env.SCCACHE = true
cmake.define.CMAKE_C_COMPILER_LAUNCHER = "sccache"
cmake.define.CMAKE_CXX_COMPILER_LAUNCHER = "sccache"

[[tool.scikit-build-overrides]]
if.env.MOLD = true
cmake.define.CMAKE_LINKER_TYPE = "mold"

[tool.cibuildwheel]
before-build = "pip install scikit-build-core cython scoring-matrices pyopal"
build-frontend = { name = "pip", args = ["--no-build-isolation"] }
build-verbosity = 1
free-threaded-support = false
test-command = "python -m unittest pyswrd.tests -v"
test-requires = ["importlib-resources"]

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.12" }
archs = ["x86_64", "arm64"]

[tool.coverage.run]
plugins = ["Cython.Coverage"]

[tool.coverage.report]
include = ["src/pyswrd/*"]
omit = ["src/pyswrd/tests/*"]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if typing.TYPE_CHECKING:",
    "@abc.abstractmethod",
    "@abc.abstractproperty",
    "raise NotImplementedError",
    "return NotImplemented",
    "raise UnexpectedError",
    "raise AllocationError",
]

[tool.mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true

["tool.mypy-pyswrd.tests"]
ignore_errors = true
